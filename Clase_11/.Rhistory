knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages(stats)
#install.packages("seasonal")
#install.packages("seasonalview")
#install.packages("shiny")
#
library(ggplot2)
library(dplyr)
library(readxl)
library(stats)
library(seasonal)
library(seasonalview)
library(shiny)
Datos <- read_excel("Base_VAR.xlsx", sheet = "Datos", col_names = TRUE)
tail(Datos)
INPC <- ts(Datos$INPC,
start = c(2000, 1),
freq = 12)
? seas
Seas_INPC <- seas(INPC)
names(Seas_INPC)
summary(Seas_INPC)
final(Seas_INPC)
INPC_Ad <- final(Seas_INPC)
original(Seas_INPC)
plot(Seas_INPC)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages(stats)
#install.packages("mFilter")
#install.packages("plm")
#
library(ggplot2)
library(dplyr)
library(readxl)
library(stats)
library(mFilter)
library(plm)
load("Datos_Ad.RData")
head(Datos_Ad)
INPC <- ts(Datos_Ad$INPC_Ad, start = c(2000, 1), freq = 12)
TC <- ts(Datos_Ad$TC_Ad, start = c(2000, 1), freq = 12)
#?hpfilter
INPC_hpf <- hpfilter(INPC, freq = 14400)
names(INPC_hpf)
INPC_hpf$cycle
INPC_hpf$trend
INPC_hpf$lambda
INPC_hpf$x
plot(INPC_hpf)
INPC_Cycle <- INPC_hpf$cycle
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages(stats)
#install.packages("seasonal")
#install.packages("seasonalview")
#install.packages("shiny")
#
library(ggplot2)
library(dplyr)
library(readxl)
library(stats)
library(seasonal)
library(seasonalview)
library(shiny)
Datos <- read_excel("Base_VAR.xlsx", sheet = "Datos", col_names = TRUE)
tail(Datos)
INPC <- ts(Datos$INPC,
start = c(2000, 1),
freq = 12)
? seas
Seas_INPC <- seas(INPC)
View(Seas_INPC)
names(Seas_INPC)
summary(Seas_INPC)
final(Seas_INPC)
INPC_Ad <- final(Seas_INPC)
original(Seas_INPC)
plot(Seas_INPC)
view(Seas_INPC)
#view(Seas_INPC)
TC <- ts(Datos$TC,
start = c(2000, 1),
freq = 12)
Seas_TC <- seas(TC)
plot(Seas_TC)
TC_Ad <- final(Seas_TC)
TC <- ts(Datos$TC,
start = c(2000, 1),
freq = 12)
Seas_TC <- seas(TC)
plot(Seas_TC)
TC_Ad <- final(Seas_TC)
CETE28 <- ts(Datos$CETE28,
start = c(2000, 1),
freq = 12)
Seas_CETE28 <- seas(CETE28)
plot(Seas_CETE28)
CETE28_Ad <- final(Seas_CETE28)
IGAE <- ts(Datos$IGAE,
start = c(2000, 1),
freq = 12)
Seas_IGAE <- seas(IGAE)
plot(Seas_IGAE)
IGAE_Ad <- final(Seas_IGAE)
IPI <- ts(Datos$IPI,
start = c(2000, 1),
freq = 12)
Seas_IPI <- seas(IPI)
plot(Seas_IPI)
IPI_Ad <- final(Seas_IPI)
Datos_Ad <- data.frame(cbind(INPC_Ad, TC_Ad, CETE28_Ad, IGAE_Ad, IPI_Ad))
Datos_Ad <- cbind(Datos, Datos_Ad)
save(Datos_Ad, file = "Datos_Ad.RData")
load("Datos_Ad.RData")
View(Datos_Ad)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages(stats)
#install.packages("mFilter")
#install.packages("plm")
#
library(ggplot2)
library(dplyr)
library(readxl)
library(stats)
library(mFilter)
library(plm)
load("Datos_Ad.RData")
head(Datos_Ad)
INPC <- ts(Datos_Ad$INPC_Ad, start = c(2000, 1), freq = 12)
TC <- ts(Datos_Ad$TC_Ad, start = c(2000, 1), freq = 12)
#?hpfilter
INPC_hpf <- hpfilter(INPC, freq = 14400)
names(INPC_hpf)
INPC_hpf$cycle
INPC_hpf$trend
INPC_hpf$lambda
INPC_hpf$x
INPC_hpf$cycle
INPC_hpf$trend
INPC_hpf$lambda
INPC_hpf$x
plot(INPC_hpf)
INPC_Cycle <- INPC_hpf$cycle
INPC_Trend <- INPC_hpf$trend
TC_hpf <- hpfilter(TC, freq = 14400)
plot(TC_hpf)
TC_Cycle <- TC_hpf$cycle
TC_Trend <- TC_hpf$trend
Datos_HPF <- cbind(Datos_Ad$FECHA,
data.frame(cbind(INPC,
INPC_Trend,
INPC_Cycle,
TC,
TC_Trend,
TC_Cycle)))
View(Datos_HPF)
st_amant_van_norden_filter <- function(ts_data) {
# Calculate the variance of the series
variance <- var(ts_data)
# Calculate the first difference of the series
diff_ts <- diff(ts_data)
# Calculate the variance of the first difference of the series
variance_diff <- var(diff_ts)
# Calculate lambda based on the St-Amant and Van Norden formula
lambda <- variance / variance_diff
# Apply the Hodrick-Prescott filter with the computed lambda
HP_Filter_StAmantVanNorden <- hpfilter(ts_data, freq = lambda)
return(HP_Filter_StAmantVanNorden)
}
IGAE <- ts(Datos_Ad$IGAE, start = c(2000, 1), freq = 12)
st_amant_van_norden_filter(IGAE)
IGAE_hpf_SAvN <- st_amant_van_norden_filter(IGAE)
plot(IGAE_hpf_SAvN)
IGAE_Cycle <- IGAE_hpf_SAvN$cycle
IGAE_Trend <- IGAE_hpf_SAvN$trend
